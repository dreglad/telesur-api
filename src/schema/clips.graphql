"""Video queries"""
type Query {
  """Retrieve a paginated list of video clips"""
  clips(where: ClipWhereInput, skip: Int, first: Int, orderBy: String): [Clip!]!
  """Clips connection"""
  clipsConnection(where: ClipWhereInput, skip: Int, first: Int): ClipConnection!
  """Retreive a single clip"""
  clip(where: ClipWhereUniqueInput!): Clip

  """Retrieve a paginated list of series"""
  series(where: WhereInput, orderBy: SerieOrderByInput, first: Int, skip: Int): [Serie!]
  """Series connection"""
  seriesConnection(where: WhereInput, orderBy: SerieOrderByInput, skip: Int, first: Int): SerieConnection!
  """Retreive a single series"""
  serie(where: WhereUniqueInput!): Serie

  """Retrieve a paginated list of video categories"""
  categories(where: WhereInput, first: Int, skip: Int): [Category!]
  """Categories connection"""
  categoriesConnection(where: WhereInput, skip: Int, first: Int): CategoryConnection!
  """Retreive a single video category"""
  category(where: WhereUniqueInput!): Category

  """Retrieve a paginated list of video genres"""
  genres(where: WhereInput, skip: Int, first: Int): [Genre!]
  """Genres connection"""
  genresConnection(where: WhereInput, skip: Int, first: Int): GenreConnection!
  """Retreive a single video genre"""
  genre(where: WhereUniqueInput!): Genre

  """Retrieve a paginated list of correspondents"""
  correspondents(where: WhereInput, first: Int, skip: Int): [Correspondent!]!
  """Correspondents connection"""
  correspondentsConnection(where: WhereInput, skip: Int, first: Int): CorrespondentConnection!
  """Retreive a single correspondent"""
  correspondent(where: WhereUniqueInput!): Correspondent

  """Retrieve a paginated list of video topics"""
  topics(where: WhereInput, first: Int, skip: Int): [Topic!]!
  """Topics connection"""
  topicsConnection(where: WhereInput, skip: Int, first: Int): TopicConnection!
  """Retreive a single video topic"""
  topic(where: WhereUniqueInput!): Topic
}

"""Video clip"""
type Clip {
  id: ID!
  slug: String
  title: String
  description: String
  """Publication status"""
  published: Boolean!
  """Publication date formatted in ISO 8601"""
  date: String!
  """HTML Embed code"""
  embed: String
  """Source MP4 file"""
  mp4: String!
  """When available, the URL of the playlist for HLS playback (Apple HTTP Live Streaming)."""
  hls: String
  url: String
  thumbnail: String!
  thumbnailSmall: String!
  """When available, a WebVTT file containing a timed thumbnail map usefull for thumbnail previews on video player progress bar"""
  thumbnails: String
  """Correpsonding uploaded YouTube ID, if available"""
  youtube: String
  width: Int
  height: Int
  aspectRatio: Float
  genre: Genre
  serie: Serie
  category: Category
  correspondent: Correspondent
  topic: Topic
}

"""Video genre"""
type Genre {
  id: ID!
  """Singular name"""
  name: String!
  """Plural name"""
  plural: String!
  description: String
  downloadable: Boolean!
  clips(where: ClipWhereInput, skip: Int, first: Int, orderBy: String): [Clip!]!
}

"""Video clip category"""
type Category {
  id: ID!
  name: String!
  clips(where: ClipWhereInput, skip: Int, first: Int, orderBy: String): [Clip!]!
}

"""Show or Serie"""
type Serie {
  id: ID!
  name: String
  poster: String
  description: String
  serieType: String
  clips(skip: Int, first: Int): [Clip!]!
  episodes(skip: Int, first: Int): [Clip!]!
}

"""Correspondent"""
type Correspondent {
  id: ID!
  name: String!
  twitter: String
  country: String
  clips(where: ClipWhereInput, skip: Int, first: Int, orderBy: String): [Clip!]!
}

"""Topic"""
type Topic {
  id: ID!
  name: String!
  description: String
  clips(where: ClipWhereInput, skip: Int, first: Int, orderBy: String): [Clip!]!
}


# Clip Connection

type ClipConnection {
  aggregate: AggregateClip!
}

input ClipWhereInput {
  genre: WhereUniqueInput,
  genreIsNull: Boolean,
  serie: WhereUniqueInput,
  serieIsNull: Boolean,
  episodesOfSerie: WhereUniqueInput,
  category: WhereUniqueInput,
  categoryIsNull: Boolean
  correspondent: WhereUniqueInput,
  correspondentIsNull: Boolean,
  topic: WhereUniqueInput,
  topicIsNull: Boolean,
  country: String,
  published: Boolean,
  search: String
}

input WhereInput {
  search: String
  withRelatedClip: Boolean,
  id_in: [ID!]
}

input ClipWhereUniqueInput {
  id: ID
  slug: ID
}

input WhereUniqueInput {
  id: ID!
}

type AggregateClip {
  count: Int
}


# Serie Connection

type SerieConnection {
  aggregate: AggregateSerie!
}

type AggregateSerie {
  count: Int
}

enum SerieOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  episodePublicationDate_DESC
}

# Correspondent Connection

type CorrespondentConnection {
  aggregate: AggregateCorrespondent!
}

type AggregateCorrespondent {
  count: Int
}

# Topic Connection

type TopicConnection {
  aggregate: AggregateTopic!
}

type AggregateTopic {
  count: Int
}


# Category Connection

type CategoryConnection {
  aggregate: AggregateCategory!
}

type AggregateCategory {
  count: Int
}


# Genre Connection

type GenreConnection {
  aggregate: AggregateGenre!
}

type AggregateGenre {
  count: Int
}
