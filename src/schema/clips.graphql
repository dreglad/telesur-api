"""Video queries"""
type Query {
  """Retrieve a paginated list of video clips"""
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
  """Clips connection"""
  clipsConnection(where: ClipWhereInput, skip: Int, first: Int): Connection!
  """Retreive a single clip"""
  clip(where: ClipWhereUniqueInput!): Clip

  """Retrieve a paginated list of series"""
  series(where: WhereInput, orderBy: SerieOrderByInput, first: Int, skip: Int): [Serie!]
  """Series connection"""
  seriesConnection(where: WhereInput, orderBy: SerieOrderByInput, skip: Int, first: Int): Connection!
  """Retreive a single series"""
  serie(where: WhereUniqueInput!): Serie

  """Retrieve a paginated list of video categories"""
  categories(where: WhereInput, first: Int, skip: Int): [Category!]
  """Categories connection"""
  categoriesConnection(where: WhereInput, skip: Int, first: Int): Connection!
  """Retreive a single video category"""
  category(where: WhereUniqueInput!): Category

  """Retrieve a paginated list of video genres"""
  genres(where: WhereInput, skip: Int, first: Int): [Genre!]
  """Genres connection"""
  genresConnection(where: WhereInput, skip: Int, first: Int): Connection!
  """Retreive a single video genre"""
  genre(where: WhereUniqueInput!): Genre

  """Retrieve a paginated list of correspondents"""
  correspondents(where: CorrespondentWhereInput, first: Int, skip: Int): [Correspondent!]!
  """Correspondents connection"""
  correspondentsConnection(where: CorrespondentWhereInput, skip: Int, first: Int): Connection!
  """Retreive a single correspondent"""
  correspondent(where: WhereUniqueInput!): Correspondent

  """Retrieve a paginated list of video topics"""
  topics(where: WhereInput, first: Int, skip: Int): [Topic!]!
  """Topics connection"""
  topicsConnection(where: WhereInput, skip: Int, first: Int): Connection!
  """Retreive a single video topic"""
  topic(where: WhereUniqueInput!): Topic
}

type Mutation {
  updateClip(data: ClipUpdateInput!, where: ClipWhereUniqueInput!): Clip
}

"""Video clip"""
type Clip {
  id: ID!
  slug: String
  title: String
  description: String
  """Publication status"""
  published: Boolean!
  """Publication date formatted in ISO 8601"""
  date: String!
  """HTML Embed code"""
  embed: String
  """Source MP4 file"""
  mp4: String
  """HLS playlist URL"""
  hls: String
  """Public URL"""
  url: String
  thumbnail: String!
  thumbnailSmall: String!
  """When available, a WebVTT file containing a timed thumbnail map usefull for thumbnail previews on video player progress bar"""
  thumbnails: String
  """Correpsonding uploaded YouTube ID, if available"""
  youtubeId: String
  uploadYoutube: Boolean!
  width: Int
  height: Int
  aspectRatio: Float
  country: String
  tags: [String!]
  hashtags: [String!]
  city: String
  highlighted: Boolean!
  genre: Genre
  serie: Serie
  category: Category
  correspondent: Correspondent
  topic: Topic
}

"""Clip genre"""
type Genre {
  id: ID!
  slug: ID!
  """Singular name"""
  name: String!
  """Plural name"""
  plural: String!
  description: String
  downloadable: Boolean!
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
}

"""Video clip category"""
type Category {
  id: ID!
  name: String!
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
}

"""Show or Serie"""
type Serie {
  id: ID!
  name: String
  poster: String
  description: String
  serieType: String
  episodes(skip: Int, first: Int): [Clip!]!
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
}

"""Correspondent"""
type Correspondent {
  id: ID!
  name: String!
  twitter: String
  country: String
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
}

"""Topic"""
type Topic {
  id: ID!
  name: String!
  description: String
  clips(where: ClipWhereInput, skip: Int, first: Int): [Clip!]!
}

"""Clip filtering criteria"""
input ClipWhereInput {
  search: String
  id_in: [ID!]
  genre: WhereInput
  genre_in: [ID!]
  category: WhereInput
  category_in: [ID!]
  category_null: Boolean
  categoryIsNull: Boolean
  correspondent: WhereInput
  correspondent_in: [ID!]
  correspondent_null: Boolean
  correspondentIsNull: Boolean
  topic: WhereInput
  topic_in: [ID!]
  topic_null: Boolean
  topicIsNull: Boolean
  serie: WhereInput
  serie_in: [ID!]
  serie_null: Boolean
  serieIsNull: Boolean
  episodesOfSerie: WhereInput
  country: String
  country_in: [String!]
  published: Boolean
}

"""Generic Filtering criteria"""
input WhereInput {
  id: ID
  search: String
  withRelatedClip: Boolean
  id_in: [ID!]
}

input CorrespondentWhereInput {
  id: ID
  search: String
  withRelatedClip: Boolean
  id_in: [ID!]
  country: String
  country_in: [String!]
}

"""Clip retrieval criteria"""
input ClipWhereUniqueInput {
  id: ID
  slug: ID
}

"""Generic retrieval criteria"""
input WhereUniqueInput {
  id: ID
}

"""Generic Relay Connection"""
type Connection {
  aggregate: Aggregate!
}

"""Generic Aggregate"""
type Aggregate {
  """Total results"""
  count: Int
}

enum SerieOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  episodePublicationDate_DESC
}
